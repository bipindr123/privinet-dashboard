"use client"

// pages/_app.tsx or pages/index.tsx
import { GoogleMap, LoadScript, Circle, Marker } from '@react-google-maps/api';
import React from 'react';

// Google map container style
const containerStyle = {
  width: '800px',
  height: '400px'
};

// Initial center position of the map
const center = {
  lat: 33.941,
  lng: -118.403
};

const circleOptions = {
  strokeColor: '#FF0000',
  strokeOpacity: 0.8,
  strokeWeight: 2,
  fillColor: '#FF0000',
  fillOpacity: 0.35,
  clickable: false,
  draggable: false,
  editable: false,
  visible: true,
  radius: 3000, // Radius in meters
  zIndex: 1
};


interface markerOptions {
icon: google.maps.Icon
}

const markerOptions = {
  position: center,
  label: {
    text: 'ðŸŸ¢',
    color: 'white',
    fontSize: '10px',
    fontWeight: 'bold',
  },
  icon: {
    url: 'https://cdn-icons-png.freepik.com/512/9708/9708985.png' || "",
    scaledSize: {
      width: 40,
      height: 40,
    },
  },
};

const MapComponent = () => {
  const apiKey = process.env.NEXT_PUBLIC_APP_API_KEY || "";
  return (
    <LoadScript googleMapsApiKey={apiKey}>
      <GoogleMap
        mapContainerStyle={containerStyle}
        center={center}
        zoom={13}
      >
        {/* Child components, such as circles, info windows, etc. */}
        <Circle
          // Required: center position of the circle
          center={center}
          // Required: radius of the circle in meters
          radius={circleOptions.radius}
          // Optional: Allows you to define the properties of the circle's outline stroke
          options={circleOptions}
        />
        
        <Marker
          // Required: position of the marker
          position={markerOptions.position}
          // Optional: label to display on the marker
          label={markerOptions.label}
          // Optional: icon for the marker
          icon={markerOptions.icon}
        />
      </GoogleMap>
    </LoadScript>
  );
};

export default MapComponent;